parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $resetFrontRouting: '%env(FRONT_ROUTING_FORGET_PASSWORD)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Dictionary/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventSubscriber\Doctrine\:
        resource: '../src/EventSubscriber/Doctrine'
        tags:
            - { name: 'doctrine.event_subscriber' }


    App\DataProvider\DictionaryDataProvider:
        arguments:
            - '@Knp\DictionaryBundle\Dictionary\Collection'
        tags:
            - { name: api_platform.collection_data_provider, priority: 2 }
            - { name: api_platform.item_data_provider, priority: 2 }
        autoconfigure: false

    App\Serializer\DictionaryNormalizer:
        tags:
            - { name: serializer.normalizer, priority: 17 }

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false

imports:
    - { resource: services/dictionary.yaml }
